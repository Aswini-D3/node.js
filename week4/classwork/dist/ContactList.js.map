{"version":3,"sources":["../src/ContactList.js"],"names":["fs","require","util","writeFile","promisify","readFile","Contact","obj","name","age","_phone","phone","console","log","number","ContactList","filename","list","contact","push","JSON","stringify","readFilePromise","then","parse","fileString","map","contactObj","Promise","resolve","exports"],"mappings":";;;;;;AAAA,IAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEA,IAAME,YAAYD,KAAKE,SAAL,CAAeJ,GAAGG,SAAlB,CAAlB;AACA,IAAME,WAAWH,KAAKE,SAAL,CAAeJ,GAAGK,QAAlB,CAAjB;;IAEMC,O;AACL,kBAAYC,GAAZ,EAAiB;AAAA;;AAChB,MAAG,CAACA,GAAD,IAAQ,CAACA,IAAIC,IAAhB,EACC,MAAM,wCAAN;;AAED,OAAKA,IAAL,GAAYD,IAAIC,IAAhB;AACA,OAAKC,GAAL,GAAWF,IAAIE,GAAf;AACA,OAAKC,MAAL,GAAcH,IAAII,KAAlB;AACA;;;;yBAcO;AACN,OAAI,KAAKA,KAAT,EACCC,QAAQC,GAAR,CAAY,aAAa,KAAKL,IAAlB,GAAyB,MAAzB,GAAkC,KAAKG,KAAnD,EADD,KAGCC,QAAQC,GAAR,CAAY,KAAKL,IAAL,GAAY,6BAAxB;AAED;;;6BACU;AACVI,WAAQC,GAAR,CAAY,aAAa,KAAKL,IAAlB,GAAyB,WAAzB,IAAwC,KAAKC,GAAL,GAAS,CAAjD,IAAsD,cAAlE;AACA;;;;AAtBD;;AAEA;AACA;;sBAEW;AACV,UAAO,KAAKC,MAAZ;AACA,G;oBAESI,M,EAAO;AAChB,QAAKJ,MAAL,GAAcI,MAAd;AACA;;;;;;AAYF;;IAEKC,W;AACL,sBAAYC,QAAZ,EAAqB;AAAA;;AACpB,OAAKC,IAAL,GAAY,EAAZ;AACA,OAAKD,QAAL,GAAgBA,QAAhB;AACA;;;;6BAEUE,O,EAAQ;AAClB,OAAGA,mBAAmBZ,OAAtB,EAA8B;AAC7B,SAAKW,IAAL,CAAUE,IAAV,CAAeD,OAAf;AACA;AACD;;;yBAEK;AACL,UAAOf,UAAU,KAAKa,QAAf,EAAyBI,KAAKC,SAAL,CAAe,KAAKJ,IAApB,CAAzB,EAAoD,MAApD,CAAP;AACA;;;yBAEK;AAAA;;AACL,OAAMK,kBAAkBjB,SAAS,KAAKW,QAAd,EAAwB,MAAxB,CAAxB;;AAEA,UAAOM,gBACNC,IADM,CACD,sBAAc;AACnB,UAAKN,IAAL,GAAYG,KAAKI,KAAL,CAAWC,UAAX,EACXC,GADW,CACP;AAAA,YAAc,IAAIpB,OAAJ,CAAYqB,UAAZ,CAAd;AAAA,KADO,CAAZ;;AAGA,WAAOC,QAAQC,OAAR,CAAgB,IAAhB,CAAP;AACA,IANM,CAAP;AAOA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;AACD;;AAEDC,QAAQxB,OAAR,GAAkBA,OAAlB;AACAwB,QAAQf,WAAR,GAAsBA,WAAtB","file":"ContactList.js","sourcesContent":["const fs = require(\"fs\");\nconst util = require(\"util\");\n\nconst writeFile = util.promisify(fs.writeFile);\nconst readFile = util.promisify(fs.readFile);\n\nclass Contact {\n\tconstructor(obj) {\n\t\tif(!obj || !obj.name)\n\t\t\tthrow \"Name is needed to create a new person.\";\n\n\t\tthis.name = obj.name;\n\t\tthis.age = obj.age;\n\t\tthis._phone = obj.phone;\n\t};\n  // addPhone(number) {\n\n  //     return this.phone = number;\n  // }\n\n  get phone(){\n  \treturn this._phone;\n  }\n\n  set phone(number){\n  \tthis._phone = number;\n  }\n\n  call() {\n  \tif (this.phone)\n  \t\tconsole.log(\"Calling \" + this.name + \" at \" + this.phone);\n  \telse\n  \t\tconsole.log(this.name + \" has no phone number saved.\");\n\n  }\n  birthday() {\n  \tconsole.log(\"Wishing \" + this.name + \" a happy \" + (this.age+1) + \"th birthday!\");\n  }\n};\n\nclass ContactList {\n\tconstructor(filename){\n\t\tthis.list = [];\n\t\tthis.filename = filename;\n\t}\n\n\taddContact(contact){\n\t\tif(contact instanceof Contact){\n\t\t\tthis.list.push(contact);\n\t\t}\n\t}\n\n\tsave(){\n\t\treturn writeFile(this.filename, JSON.stringify(this.list), \"utf8\");\n\t}\n\n\tload(){\n\t\tconst readFilePromise = readFile(this.filename, \"utf8\");\n\n\t\treturn readFilePromise\n\t\t.then(fileString => {\n\t\t\tthis.list = JSON.parse(fileString)\n\t\t\t.map(contactObj => new Contact(contactObj));\n\n\t\t\treturn Promise.resolve(null);\n\t\t});\n\t\t// return new Promise((resolve, reject) => {\n\t\t// \treadFilePromise\n\t\t// \t.then(fileString => {\n\t\t// \t\tthis.list = JSON.parse(fileString)\n\t\t// \t\t.map(contactObj => new Contact(contactObj));\n\n\t\t// \t\tresolve(null);\n\t\t// \t});\n\t\t// });\n\t}\n};\n\nexports.Contact = Contact;\nexports.ContactList = ContactList;"]}