{"version":3,"sources":["../src/ContactList.js"],"names":["fs","require","util","writeFile","promisify","readFile","Contact","obj","name","age","phone","length","_name","_phone","toString","ContactList","filename","list","contact","push","JSON","stringify","readFilePromise","then","parse","fileString","forEach","addContact","contactObj","Promise","resolve","exports"],"mappings":";;;;;;AAAA,IAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEA,IAAME,YAAYD,KAAKE,SAAL,CAAeJ,GAAGG,SAAlB,CAAlB;AACA,IAAME,WAAWH,KAAKE,SAAL,CAAeJ,GAAGK,QAAlB,CAAjB;;IAEMC,O;AACL,kBAAYC,GAAZ,EAAiB;AAAA;;AAChB,MAAG,CAACA,GAAJ,EACC,MAAM,mDAAN;;AAED;;AAEA,OAAKC,IAAL,GAAYD,IAAIC,IAAhB;AACA,OAAKC,GAAL,GAAWF,IAAIE,GAAf;AACA,OAAKC,KAAL,GAAaH,IAAIG,KAAjB;AACA;;;;;;AAsCA;AACA;2BACS;AACR,UAAO;AACNF,UAAM,KAAKA,IADL;AAENC,SAAK,KAAKA,GAFJ;AAGNC,WAAO,KAAKA;AAHN,IAAP;AAKA;;;yBAEM;AACN,OAAI,KAAKA,KAAT,EACC,oBAAmB,KAAKF,IAAxB,oBADD,KAGC,OAAW,KAAKA,IAAhB;AAED;;;6BACU;AACV,uBAAmB,KAAKA,IAAxB,iBAA0C,EAAE,KAAKC,GAAjD;AACA;;;oBAvDQD,I,EAAK;AACd,OAAG,CAACA,IAAJ,EACC,MAAM,mCAAN,CADD,KAEK,IAAG,OAAOA,IAAP,KAAgB,QAAnB,EACJ,MAAM,oCAAN,CADI,KAEA,IAAGA,KAAKG,MAAL,GAAc,CAAjB,EACJ,MAAM,iDAAN;AACD,QAAKC,KAAL,GAAaJ,IAAb;AACA,G;sBAES;AACT,UAAO,KAAKI,KAAZ;AACA;;;sBAGW;AACV,UAAO,KAAKC,MAAZ;AACA,G;oBAESH,K,EAAM;AACf,OAAG,CAACA,KAAJ,EACC,OAAO,KAAKG,MAAL,GAAc,IAArB;;AAED,OAAG,OAAOH,KAAP,KAAiB,QAApB,EACC,CADD,KAEK,IAAG,OAAOA,KAAP,KAAiB,QAApB,EACJA,QAAQA,MAAMI,QAAN,EAAR,CADI,KAGJ,MAAM,+CAAN;;AAED,OAAGJ,MAAMC,MAAN,GAAe,CAAlB,EACC,MAAM,iDAAN;;AAED,QAAKE,MAAL,GAAcH,KAAd;AACA;;;;;;AAsBF;;IAEKK,W;AACL,sBAAYC,QAAZ,EAAqB;AAAA;;AACpB,OAAKC,IAAL,GAAY,EAAZ;AACA,OAAKD,QAAL,GAAgBA,QAAhB;AACA;;;;6BAEUE,O,EAAQ;AAClB,OAAGA,mBAAmBZ,OAAtB,EAA8B;AAC7B,SAAKW,IAAL,CAAUE,IAAV,CAAeD,OAAf;AACA;AACD;;;yBAEK;AACL,UAAOf,UAAU,KAAKa,QAAf,EAAyBI,KAAKC,SAAL,CAAe,KAAKJ,IAApB,CAAzB,EAAoD,MAApD,CAAP;AACA;;;yBAEK;AAAA;;AACL,OAAMK,kBAAkBjB,SAAS,KAAKW,QAAd,EAAwB,MAAxB,CAAxB;AACA;AACA,QAAKC,IAAL,GAAY,EAAZ;;AAEA,UAAOK,gBACNC,IADM,CACD,sBAAc;AACnBH,SAAKI,KAAL,CAAWC,UAAX,EACCC,OADD,CACS;AAAA,YAAc,MAAKC,UAAL,CAAgB,IAAIrB,OAAJ,CAAYsB,UAAZ,CAAhB,CAAd;AAAA,KADT;;AAGA,WAAOC,QAAQC,OAAR,CAAgB,IAAhB,CAAP;AACA,IANM,CAAP;AAOA;;;;;;AACD;;AAEDC,QAAQzB,OAAR,GAAkBA,OAAlB;AACAyB,QAAQhB,WAAR,GAAsBA,WAAtB","file":"ContactList.js","sourcesContent":["const fs = require(\"fs\");\r\nconst util = require(\"util\");\r\n\r\nconst writeFile = util.promisify(fs.writeFile);\r\nconst readFile = util.promisify(fs.readFile);\r\n\r\nclass Contact {\r\n\tconstructor(obj) {\r\n\t\tif(!obj)\r\n\t\t\tthrow \"Need an object to instantiate Contact properties.\";\r\n\r\n\t\t// console.log(\"obj:\", obj);\r\n\r\n\t\tthis.name = obj.name;\r\n\t\tthis.age = obj.age;\r\n\t\tthis.phone = obj.phone;\r\n\t};\r\n\r\n\tset name (name){\r\n\t\tif(!name)\r\n\t\t\tthrow \"Name is needed to create a person\";\r\n\t\telse if(typeof name !== \"string\")\r\n\t\t\tthrow \"Contact.name needs to be a string.\"\r\n\t\telse if(name.length < 4)\r\n\t\t\tthrow \"Contact.name needs to be at least 4 characters.\"\r\n\t\tthis._name = name;\r\n\t}\r\n\r\n\tget name(){\r\n\t\treturn this._name;\r\n\t}\r\n  \r\n\r\n  get phone(){\r\n  \treturn this._phone;\r\n  }\r\n\r\n  set phone(phone){\r\n  \tif(!phone)\r\n  \t\treturn this._phone = null;\r\n\r\n  \tif(typeof phone === \"string\")\r\n  \t\t;\r\n  \telse if(typeof phone === \"number\")\r\n  \t\tphone = phone.toString();\r\n  \telse\r\n  \t\tthrow \"Contact.phone should be a string or a number.\"\r\n\r\n  \tif(phone.length < 8)\r\n  \t\tthrow \"Contact.phone should be at least 8 digits long.\"\r\n\r\n  \tthis._phone = phone;\r\n  }\r\n\r\n  // this helps JSON.stringify convert getter properties correctly\r\n  // https://stackoverflow.com/questions/42107492/json-stringify-es6-class-property-with-getter-setter\r\n  toJSON (){\r\n  \treturn {\r\n  \t\tname: this.name,\r\n  \t\tage: this.age,\r\n  \t\tphone: this.phone\r\n  \t}\r\n  }\r\n\r\n  call() {\r\n  \tif (this.phone)\r\n  \t\treturn `Calling ${ this.name } at this.phone`;\r\n  \telse\r\n  \t\treturn `${ this.name } has no phone number saved`;\r\n\r\n  }\r\n  birthday() {\r\n  \treturn `Wishing ${ this.name } a happy ${ ++this.age }th birthday!`;\r\n  }\r\n};\r\n\r\nclass ContactList {\r\n\tconstructor(filename){\r\n\t\tthis.list = [];\r\n\t\tthis.filename = filename;\r\n\t}\r\n\r\n\taddContact(contact){\r\n\t\tif(contact instanceof Contact){\r\n\t\t\tthis.list.push(contact);\r\n\t\t}\r\n\t}\r\n\r\n\tsave(){\r\n\t\treturn writeFile(this.filename, JSON.stringify(this.list), \"utf8\");\r\n\t}\r\n\r\n\tload(){\r\n\t\tconst readFilePromise = readFile(this.filename, \"utf8\");\r\n\t\t// clean the list, since we'll add all contacts again\r\n\t\tthis.list = [];\r\n\r\n\t\treturn readFilePromise\r\n\t\t.then(fileString => {\r\n\t\t\tJSON.parse(fileString)\r\n\t\t\t.forEach(contactObj => this.addContact(new Contact(contactObj)));\r\n\r\n\t\t\treturn Promise.resolve(null);\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexports.Contact = Contact;\r\nexports.ContactList = ContactList;"]}